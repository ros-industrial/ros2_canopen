Device Manager
==============

The device manager implements ROS2 component manager interface and can therefore be handled similar to a
container node. This enables flexibly loading and unloading the driver nodes necessary for commanding
each device on the bus. The user can decide when the device should be activated. 


.. figure:: images/device-manager.png
    :alt: Device Manager Concept

    device manager concept

The device manager will uses the bus description file to identify the correct drivers for each devices.
On startup it will load the CANopen master node and pass the generated DCF files to configure the CANopen master
correctly for you bus configuration. Once a CANopen Node comes online (i.e. sends the boot indication) the CANopen master
will configure the node with the parameters and commands specified in the bus configuration for that device.

The device manager will then go on loading the drivers specified in the bus configuration file if they are not
marked as lazy loaded. If the driver is marked as lazy loaded it is not loaded on startup of the device manager but when the user call the component load service
for that specific driver.

All loaded nodes are added to the device manager's executor.

.. figure:: images/device-manager-usage.png
    :alt: Device Manager Usage

    device manager usage

Configuration
-------------
The device manager has the following configuration parameters.

.. csv-table:: Parameters
   :header: "Parameter", "Type", "Description"

    bus_conf, string, (Mandatory) Path to the bus configuration YAML-file
    master_dcf, string, (Mandatory) Path to the DCF file to be used by the master node. Usually generated by dcfgen as master.dcf.
    master_bin, string, (Optional) Path to the concise DCF (.bin) file to be used to configure the master. Usually generated by dcfgen as master.bin. (default: "")
    can_interface, string, (Mandatory) Name of the CAN interface to be used. (default: vcan0)



 